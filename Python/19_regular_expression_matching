# -*- coding:utf-8 -*-
class Solution:
    # s, pattern都是字符串
    def match(self, s, pattern):
        # write code here
        if s == None or pattern == None:
            return False
        return self.matchCore(s, pattern)
    def matchCore(self, s, pattern):
        if len(s) == 0 and len(pattern) == 0:
            return True
        if len(s) and len(pattern) == 0:
            return False
        if len(pattern) == 1 or pattern[1] != '*':
            if len(s) > 0 and (pattern[0] == '.' or s[0] == pattern[0]):
                return self.matchCore(s[1:], pattern[1:])
            else:
                return False
        elif pattern[1] == '*':
            if len(s) > 0 and (pattern[0] == '.' or pattern[0] == s[0]):
                return self.matchCore(s[1:], pattern[2:]) or \
                self.matchCore(s[1:], pattern) or \
                self.matchCore(s, pattern[2:])
            else:
                return self.matchCore(s, pattern[2:])
        return False

if __name__ == "__main__":
    solu = Solution()
    print(solu.match("", "."))
